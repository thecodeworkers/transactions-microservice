# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from app.protos import send_money_pb2 as app_dot_services_dot_send__money_dot_send__money__pb2


class SendMoneyStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.withdraw = channel.unary_unary(
                '/SendMoney/withdraw',
                request_serializer=app_dot_services_dot_send__money_dot_send__money__pb2.SendMoneyRequest.SerializeToString,
                response_deserializer=app_dot_services_dot_send__money_dot_send__money__pb2.WithdrawResponse.FromString,
                )
        self.sent = channel.unary_unary(
                '/SendMoney/sent',
                request_serializer=app_dot_services_dot_send__money_dot_send__money__pb2.SendMoneyRequest.SerializeToString,
                response_deserializer=app_dot_services_dot_send__money_dot_send__money__pb2.SentResponse.FromString,
                )


class SendMoneyServicer(object):
    """Missing associated documentation comment in .proto file."""

    def withdraw(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def sent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SendMoneyServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'withdraw': grpc.unary_unary_rpc_method_handler(
                    servicer.withdraw,
                    request_deserializer=app_dot_services_dot_send__money_dot_send__money__pb2.SendMoneyRequest.FromString,
                    response_serializer=app_dot_services_dot_send__money_dot_send__money__pb2.WithdrawResponse.SerializeToString,
            ),
            'sent': grpc.unary_unary_rpc_method_handler(
                    servicer.sent,
                    request_deserializer=app_dot_services_dot_send__money_dot_send__money__pb2.SendMoneyRequest.FromString,
                    response_serializer=app_dot_services_dot_send__money_dot_send__money__pb2.SentResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SendMoney', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class SendMoney(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def withdraw(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SendMoney/withdraw',
            app_dot_services_dot_send__money_dot_send__money__pb2.SendMoneyRequest.SerializeToString,
            app_dot_services_dot_send__money_dot_send__money__pb2.WithdrawResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def sent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/SendMoney/sent',
            app_dot_services_dot_send__money_dot_send__money__pb2.SendMoneyRequest.SerializeToString,
            app_dot_services_dot_send__money_dot_send__money__pb2.SentResponse.FromString,
            options, channel_credentials,
            call_credentials, compression, wait_for_ready, timeout, metadata)
